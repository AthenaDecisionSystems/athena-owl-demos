name: Build and Publish image to docker
on:
  push:
    branches:
      - main
      
    paths-ignore:
      - 'docs/**'
      - '.vscode/**'
      - 'deployment/**'
      - 'tools/**'
      - 'owl-agent-frontend/**'
jobs:
  validate-docker-secrets:
    runs-on: ubuntu-latest
    steps:
    - name: Validate docker registry secrets are defined
      id: validate-docker-secrets
      run: |
        echo "Validating docker registry secrets are defined on the repository"

        FAIL=false

        validate_secret(){
          FIELD=$1
          VALUE=$2

          if [ -z "${VALUE}" ]; then
            echo "The secret ${FIELD} needs to be set on this repository."
            FAIL=true
          else
            echo "The secret ${FIELD} is set on this repository."
          fi
        }

        validate_secret DOCKER_USER ${DOCKER_USER}
        validate_secret DOCKER_HUB_TOKEN ${DOCKER_HUB_TOKEN}
        validate_secret DOCKER_REGISTRY ${DOCKER_REGISTRY}
        if [ "${FAIL}" = "true" ]; then
          exit 1
        fi
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
        DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
  publish_images:
    needs:
      validate-docker-secrets
    runs-on: ubuntu-latest
    steps:
      - name: Check out this repo
        uses: actions/checkout@v4
      - name: Check out owl core repo
        uses: actions/checkout@v4
        with: 
          repository: AthenaDecisionSystems/athena-owl-core
          ref: refs/heads/development
          path: owl_core
      - name: build ibu backend image
        run: |
          IMAGE_NAME="${DOCKER_REG}/${DOCKER_R}/${DOCKER_I}"
          docker login -u ${DOCKER_U} -p ${DOCKER_P} ${DOCKER_REG}
          if [ -z "$IMAGE_TAG" ]; then
            IMAGE_TAG=latest
          fi
          cp  -r owl_core/owl-agent-backend/src/athena IBU-insurance-demo/ibu_backend/src/athena
          docker build IBU-insurance-demo/ibu_backend/src/ -t ${IMAGE_NAME}:${IMAGE_TAG}
          docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:latest
          docker push ${IMAGE_NAME}:${IMAGE_TAG}
        env:
          DOCKER_U: ${{ secrets.DOCKER_USER }}
          DOCKER_P: ${{ secrets.DOCKER_HUB_TOKEN }}
          DOCKER_REG: ${{ secrets.DOCKER_REGISTRY }}
          DOCKER_R: athenadecisionsystems
          DOCKER_I: ibu-insurance
          IMAGE_TAG: 1.0.0
      - name: build ibu ins data access image
        run: |
          IMAGE_NAME="${DOCKER_REG}/${DOCKER_R}/${DOCKER_I}"
          docker login -u ${DOCKER_U} -p ${DOCKER_P} ${DOCKER_REG}
          if [ -z "$IMAGE_TAG" ]; then
            IMAGE_TAG=latest
          fi
          docker build IBU-insurance-demo/datamgt/code/apis-datamgt-insurance-pc-claims/ -t ${IMAGE_NAME}:${IMAGE_TAG}
          docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:latest
          docker push ${IMAGE_NAME}:${IMAGE_TAG}
        env:
          DOCKER_U: ${{ secrets.DOCKER_USER }}
          DOCKER_P: ${{ secrets.DOCKER_HUB_TOKEN }}
          DOCKER_REG: ${{ secrets.DOCKER_REGISTRY }}
          DOCKER_R: athenadecisionsystems
          DOCKER_I: ibu-insurance-data-mgr
          IMAGE_TAG: 1.0.0
